classdef Swarm_t < handle
  
  properties
    id
    nParticles
    particles
    curGbest
    prevGbest
    dimension
    c1
    c2
    omega
    decimals
    posRes
  end
  
  methods (Access = public)
  
    % Constructor
    function s = Swarm_t(id, nParticles, dim, c1, c2, omega, decimals, posRes)
      s.particles  = Particle_t.empty;
      s.c1         = c1;
      s.c2         = c2;
      s.omega      = omega;
      s.decimals   = decimals;
      s.posRes     = posRes;
      s.id         = id;
      s.dimension  = dim;
      s.nParticles = 0;
      s.CreateParticles(nParticles);
      for iDim = 1 : dim
        
    end
    
    % Destructor
    function Del(s)
      delete(s);
    end
    
    % Add existing particle
    function AddParticle(s, p)
      s.nParticles = s.nParticles + 1;
      s.particles(s.nParticles) = p;
      s.particles(s.nParticles).id = s.nParticles;
    end
    
    % Create particles
    function CreateParticles(s, nParticles)
      for iParticle = s.nParticles + 1 : s.nParticles + nParticles
        s.particles(iParticle) = Particle_t(iParticle, s.dimension);
        s.nParticles = s.nParticles + 1;
      end
    end
    
    % Remove certain particles
    function RemoveParticles(s,idx)
      if ~isempty(find(idx > s.nParticles)) || ~isempty(find(idx < 0))
        error('No particles with at one or more of these indexes.');
      end
      idx = sort(idx);
      for i = length(idx) : -1 : 1
        s.ShiftParticlesIdLeft(idx(i));
        s.particles(idx(i)).Del;
        s.particles(idx(i)) = [];
        s.nParticles = s.nParticles - 1;
      end
    end
    
    % Get the content of certain particles
    function p = GetParticles(s,idx)
      if ~isempty(find(idx > s.nParticles)) || ~isempty(find(idx < 0))
        error('No particles with at one or more of these indexes.');
      end
      p = Particle_t.empty;
      idx = sort(idx);
      for iParticle = 1 : length(idx)
        p(iParticle) = s.particles(idx(iParticle));
      end
    end
    
  end
  
  methods (Access = private)
    
    % Shift the IDs of the particles from a certain index to the left
    % To be called when removing particles
    function ShiftParticlesIdLeft(s,idx)
      if (idx > s.nParticles) || (idx <= 0)
        error('Wrong index.');
      end
      if idx < s.nParticles
        for iParticle = s.nParticles : -1 : idx + 1
          s.particles(iParticle).id = s.particles(iParticle - 1).id;
        end
      end
    end
    
  end
  
end

